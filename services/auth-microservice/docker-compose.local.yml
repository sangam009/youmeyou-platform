version: '3.8'

services:
  # Auth Microservice
  auth-service:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: auth-service:latest
    container_name: auth-service-ms
    restart: unless-stopped
    env_file:
      - ./backend/.env.development
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run dev

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: auth-mysql-ms
    restart: unless-stopped
    env_file:
      - ./mysql.env
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 15s
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    ports:
      - "3306:3306"

  # Redis for Session Storage
  redis:
    image: redis:alpine
    container_name: auth-redis-ms
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - app-network
    ports:
      - "6379:6379"

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  redis-data:
