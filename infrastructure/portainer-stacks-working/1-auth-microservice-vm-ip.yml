# Auth Microservice Stack - VM Internal IP Configuration
# This stack uses VM internal IP (10.0.1.2) for persistent connectivity
# Requires services to expose ports on the VM for internal communication

version: '3.8'

services:
  # Auth Service MySQL Database (Internal Only)
  auth-mysql:
    image: mysql:8.0
    container_name: youmeyou-auth-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: auth_mysql_root_2024!
      MYSQL_DATABASE: auth_service
      MYSQL_USER: auth_user
      MYSQL_PASSWORD: auth_password_2024!
    volumes:
      - auth_mysql_data:/var/lib/mysql
      - ./auth-mysql-init:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"  # Expose on VM for internal access
    networks:
      - youmeyou-data
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Auth Service Redis (Internal Only)
  auth-redis:
    image: redis:7-alpine
    container_name: youmeyou-auth-redis
    restart: unless-stopped
    command: redis-server --requirepass auth_redis_2024!
    volumes:
      - auth_redis_data:/data
    ports:
      - "6380:6379"  # Expose on VM for internal access
    networks:
      - youmeyou-data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "auth_redis_2024!", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Auth Service API (Server-level access, Gateway routes publicly)
  auth-service:
    image: registry-staging.youmeyou.ai/youmeyou/auth-service:latest
    container_name: youmeyou-auth-service
    restart: unless-stopped
    environment:
      NODE_ENV: staging
      PORT: 3001
      # Using VM internal IP for persistent connectivity
      DB_HOST: 10.0.1.2
      DB_PORT: 3307
      DB_NAME: auth_service
      DB_USER: auth_user
      DB_PASSWORD: auth_password_2024!
      DB_CONNECTION_LIMIT: 10
      # Using VM internal IP for Redis connection
      REDIS_URL: redis://:auth_redis_2024!@10.0.1.2:6380
      REDIS_HOST: 10.0.1.2
      REDIS_PORT: 6380
      REDIS_PASSWORD: auth_redis_2024!
      SESSION_SECRET: youmeyou-auth-session-secret-staging-2024
      REDIS_PREFIX: auth_staging_
      REDIS_TTL: 86400
      JWT_SECRET: youmeyou-auth-jwt-secret-staging-2024
      FIREBASE_TYPE: service_account
      FIREBASE_PROJECT_ID: youmeyou-staging
      FIREBASE_PRIVATE_KEY_ID: placeholder_key_id
      FIREBASE_PRIVATE_KEY: "-----BEGIN PRIVATE KEY-----\nplaceholder_private_key\n-----END PRIVATE KEY-----\n"
      FIREBASE_CLIENT_EMAIL: firebase-adminsdk@youmeyou-staging.iam.gserviceaccount.com
      FIREBASE_CLIENT_ID: placeholder_client_id
      FIREBASE_AUTH_URI: https://accounts.google.com/o/oauth2/auth
      FIREBASE_TOKEN_URI: https://oauth2.googleapis.com/token
      FIREBASE_AUTH_PROVIDER_X509_CERT_URL: https://www.googleapis.com/oauth2/v1/certs
      FIREBASE_CLIENT_X509_CERT_URL: https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk%40youmeyou-staging.iam.gserviceaccount.com
      FIREBASE_UNIVERSE_DOMAIN: googleapis.com
      CORS_ORIGIN: "http://34.93.209.77,https://34.93.209.77,http://youmeyou.staging.com,https://youmeyou.staging.com"
    ports:
      - "3001:3001"  # Server-level access (not public via firewall)
    depends_on:
      - auth-mysql
      - auth-redis
    networks:
      - youmeyou-data
      - youmeyou-internal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

volumes:
  auth_mysql_data:
    driver: local
  auth_redis_data:
    driver: local

networks:
  youmeyou-data:
    external: true
  youmeyou-internal:
    external: true 