# YouMeYou Platform - NGINX Gateway Configuration
# Routes traffic to microservices with DNS-based routing and IP restrictions

# Your IP address for restricted access (update as needed)
geo $allowed_ip {
    default 0;
    # Current user IP and broader range to handle IP changes
    106.222.230.223 1;  # Current user IP
    106.222.0.0/16 1;   # Broader IP range to handle future changes
    2401:4900:1cb5:788d:481a:7c01:75b9:8bff/32 1;  # Previous IPv6 range
    127.0.0.1 1;        # Localhost for testing
    10.0.0.0/8 1;       # Internal network
    172.16.0.0/12 1;    # Docker networks
    192.168.0.0/16 1;   # Private networks
}

# Upstream definitions for microservices (using VM IP and ports)
upstream auth_service {
    server 10.0.1.2:3001;
}

upstream design_service {
    server 10.0.1.2:4000;
}

upstream payment_service {
    server 10.0.1.2:6000;
}

upstream portainer_service {
    server 10.0.1.2:9000;
}

upstream registry_service {
    server 10.0.1.2:5000;
}

upstream registry_ui_service {
    server 10.0.1.2:5001;
}

upstream codaloo_web {
    server 10.0.1.2:3000;
}

# Main application server
server {
    listen 80;
    server_name 34.93.209.77 youmeyou.staging.com;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    
    # CORS headers
    add_header Access-Control-Allow-Origin "*";
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
    add_header Access-Control-Allow-Headers "Content-Type, Authorization";
    
    # Auth Service API
    location /api/auth {
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        
        rewrite ^/api/auth(/.*)$ $1 break;
        proxy_pass http://auth_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Design Service API
    location /api/design {
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        
        rewrite ^/api/design(/.*)$ $1 break;
        proxy_pass http://design_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Payment Service API
    location /api/payment {
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        
        rewrite ^/api/payment(/.*)$ $1 break;
        proxy_pass http://payment_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Health check endpoints
    location /health/auth {
        proxy_pass http://auth_service/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /health/design {
        proxy_pass http://design_service/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /health/payment {
        proxy_pass http://payment_service/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Codaloo Web Application - Default location
    location / {
        proxy_pass http://codaloo_web;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Next.js specific headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }
}

# Portainer Management Interface (IP Restricted)
server {
    listen 80;
    server_name portainer.youmeyou.staging.com portainer-staging.youmeyou.ai;
    
    # IP restriction for Portainer access
    if ($allowed_ip = 0) {
        return 403 "Access denied - IP not authorized";
    }
    
    location / {
        proxy_pass http://portainer_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

# Docker Registry (IP Restricted)
server {
    listen 80;
    server_name registry.youmeyou.staging.com registry-staging.youmeyou.ai;
    
    # IP restriction for Registry access
    if ($allowed_ip = 0) {
        return 403 "Access denied - IP not authorized";
    }
    
    location / {
        proxy_pass http://registry_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Registry specific headers
        proxy_set_header Docker-Content-Digest $upstream_http_docker_content_digest;
        proxy_set_header Docker-Distribution-Api-Version $upstream_http_docker_distribution_api_version;
        proxy_buffering off;
        
        # Increase timeouts for large image uploads
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        client_max_body_size 2G;
    }
}

# Docker Registry UI (IP Restricted)
server {
    listen 80;
    server_name registry-ui.youmeyou.staging.com registry-ui-staging.youmeyou.ai;
    
    # IP restriction for Registry UI access
    if ($allowed_ip = 0) {
        return 403 "Access denied - IP not authorized";
    }
    
    location / {
        proxy_pass http://registry_ui_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
} 